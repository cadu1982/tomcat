USE AB_DDA
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE name = 'SP_PROCESSA_ADDA120')
BEGIN
	EXEC ('CREATE PROCEDURE dbo.SP_PROCESSA_ADDA120 AS BEGIN RETURN END')
END
GO


ALTER PROCEDURE dbo.SP_PROCESSA_ADDA120(
	@P_TIMEOUT INT,
	@P_SQLERRO INT OUT
)
AS
BEGIN

	/*
		DOMINIO DE REJEICOES

		"01" - TITULO NAO ENCONTRADO
		"22" - BAIXA JA REGISTRADA

	*/
/*---------------------------------------------------------------------------------------------------*/
/* 16/02/2023 - Eliane - Adequando a procedure para atender o ANTES e o DEPOIS da MODERNIZAÇÃO.      */
/*---------------------------------------------------------------------------------------------------*/
/*------------------ Catalogo anterior à modernização -------------------------*/
/* TIPOBAIXA EFETIVA --> Tipo de baixa do título			       */
/* 									       */
/* 0 Baixa Efetiva Integral Interbancária			    	       */
/* 1 Baixa Efetiva Integral Intrabancária			 	       */
/* 2 Baixa Efetiva Integral por Solicitação do Cedente	 		       */
/* 3 Baixa Efetiva Integral por envio para protesto	 		       */
/* 4 Baixa Efetiva Integral por decurso de prazo		 	       */
/* 5 Baixa Efetiva Parcial Intrabancária			 	       */
/* 6 Baixa Efetiva Parcial Interbancária			 	       */
/* 7 Baixa Efetiva por solicitação da Instituição Destinatária		       */
/* ----------------------------------------------------------------------------*/
/* CATALOGO DA MODERNIZAÇÃO...                                                 */
/* 0 - BAIXA INTEGRAL INTERBANCARIA					       */
/* 1 - BAIXA INTEGRAL INTRABANCARIA					       */
/* 5 - BAIXA INTEGRAL POR SOLICITAÇÃO DO CEDENTE			       */
/* 6 - BAIXA INTEGRAL POR ENVIO PARA PROTESTO				       */
/* 7 - BAIXA INTEGRAL POR DECURSO DE PRAZO				       */
/* 2 - BAIXA PARCIAL  INTRABANCARIA					       */
/* 3 - BAIXA PARCIAL  INTERBANCARIA					       */
/* 8 - BAIXA INTEGRAL POR SOLICITAÇÃO DA IF DESTINATÁRIA		       */
/* 									       */
/* 4 - BAIXA INTEGRAL VIA PIX 						       */
/* -----------------------------------------------------------------------------*/
/* CODSITUACAO que fica no título:					        */
/* 1 - EM ABERTO; 						       		*/
/* 2 - Baixado por solicitação do Cedente.	 		       		*/
/* 3 - Baixado por liquidação intrabancaria.			      		*/
/* 4 - Baixado por liquidação interbancaria.			       		*/
/* 5 - Baixado por Decurso de Prazo.				       		*/
/* 6 - Baixado para envio a Protesto..				       		*/
/*------------------------------------------------------------------------------*/	
	
	DECLARE @DATAULTPROCESSAMENTO DATETIME, @DATAPROCESSAMENTO DATETIME, @TIMESTAMP DATETIME, @SQLERRO INT
        
        DECLARE @VRSMANUAL VARCHAR (07) /* 16/02/2023 */

	        
	SELECT @DATAULTPROCESSAMENTO=DATAULTPROCESSAMENTO, @DATAPROCESSAMENTO = DATAPROCESSAMENTO, @TIMESTAMP = GETDATE()
	FROM PARAMETROS WHERE CODSISTEMA = 'DDA-AUTK'

	SELECT @VRSMANUAL = VRSMANUAL FROM VWIB_VRSMANUAL WITH (NOLOCK)  /* 16/02/2023 */

	-- TIMEOUT DAS TABELAS DE RESERVA
	DELETE FROM TEMP_RECEBE_ADDA120 WHERE DATEADD(MINUTE, @P_TIMEOUT, DATAHORAPROC) < @TIMESTAMP

	SELECT @SQLERRO = @@ERROR
	IF @SQLERRO != 0 GOTO TRATAERRO
	
	SELECT * INTO #TEMP_RECEBE FROM RECEBE_ADDA120 
	WHERE DATAMOVTO >= @DATAULTPROCESSAMENTO AND DATAMOVTO <= @DATAPROCESSAMENTO AND CODPROCESSA = '0' AND INDIMPORTACAOVALIDA = 'S'

	SELECT @SQLERRO = @@ERROR
	IF @SQLERRO != 0 GOTO TRATAERRO

	-- DELETA AQUILO QUE JA ESTA RESERVADO
	DELETE TEMP FROM #TEMP_RECEBE TEMP
	INNER JOIN TEMP_RECEBE_ADDA120 RESERVA ON 
		(TEMP.SEQ_RECEBE = RESERVA.SEQ_RECEBE AND TEMP.DATAMOVTO = RESERVA.DATAMOVTO)

	SELECT @SQLERRO = @@ERROR
	IF @SQLERRO != 0 GOTO TRATAERRO

	-- RESERVA O QUE ESTA LIVRE
	INSERT INTO TEMP_RECEBE_ADDA120(SEQ_RECEBE,DATAMOVTO,DATAHORAPROC)
	SELECT SEQ_RECEBE, DATAMOVTO, @TIMESTAMP FROM #TEMP_RECEBE

	SELECT @SQLERRO = @@ERROR
	IF @SQLERRO != 0 GOTO TRATAERRO


	-- RECUSAS POR TITULO NAO CADASTRADO, "01"
	UPDATE #TEMP_RECEBE SET CODPROCESSA = '2', CODREJEICAO = '01' 
	WHERE CODPROCESSA = '0' AND NUMIDENTCDDA NOT IN (SELECT NUMIDENTCDDA FROM TITULOS)

	SELECT @SQLERRO = @@ERROR
	IF @SQLERRO != 0 GOTO TRATAERRO

	-- RECUSAS POR BAIXA JA CADASTRADA, "22"
	UPDATE #TEMP_RECEBE SET CODPROCESSA = '2', CODREJEICAO = '22' FROM #TEMP_RECEBE TEMP
	INNER JOIN BAIXAS_EFETIVAS BAIXAS ON (
		TEMP.CODPROCESSA = '0' 
		AND BAIXAS.NUMIDENTCBAIXAEFET = TEMP.NUMIDENTCBAIXAEFET 
		AND BAIXAS.NUMIDENTCDDA = TEMP.NUMIDENTCDDA
	)

	SELECT @SQLERRO = @@ERROR
	IF @SQLERRO != 0 GOTO TRATAERRO

	-- O RESTO PODE SER DADO COMO ACEITO E PROCESSADO
	UPDATE #TEMP_RECEBE SET CODPROCESSA = '1' WHERE CODPROCESSA = '0' AND CODREJEICAO IS NULL

	SELECT @SQLERRO = @@ERROR
	IF @SQLERRO != 0 GOTO TRATAERRO

	BEGIN TRANSACTION

		UPDATE RECEBE_ADDA120 SET CODPROCESSA = TEMP.CODPROCESSA, CODREJEICAO = TEMP.CODREJEICAO 
		FROM RECEBE_ADDA120 RECEBE
		INNER JOIN #TEMP_RECEBE TEMP ON (TEMP.SEQ_RECEBE = RECEBE.SEQ_RECEBE)

		SELECT @SQLERRO = @@ERROR
		IF @SQLERRO != 0 GOTO TRATAERROTRANS

        IF @VRSMANUAL <= '5.05'  /* 16/02/2023 */
            
           BEGIN /* Catalogo anterior à MODERNIZAÇÃO */

		UPDATE TITULOS SET
			 DTHRSITTITULO = TEMP.DATAHORASITUACAO,
			 QTDPAGTOREG = ISNULL(TEMP.QTDPAGTOPARCIAL, TITULOS.QTDPAGTOREG),
			 VLRSALDOATUAL = ISNULL(TEMP.VLRSALDOTITULO, TITULOS.VLRSALDOATUAL),
			 SITPAGAMENTOCIP = TEMP.SITPAGTOCIP,
			 TIPOBAIXA = '4',  /*(DECURSO DE PRAZO)*/		
			 CODSITUACAO = '05', /*(BAIXA EFETIVA POR DECURSO DE PRAZO)*/
			 VLRPAGTOBAIXA = 0,
			 DATAPAGTOBAIXA = TEMP.DATAHORABAIXAEFET,
			 ULTNUMREFCADTIT = TEMP.NUMREFCADTITULO, 
			 ULTNUMREFBAIXAOPERAC = CASE WHEN ISNULL(TEMP.ULTNUMSEQBAIXAOPERAC, -1) > ISNULL(TITULOS.ULTNUMSEQBAIXAOPERAC, -1) 
										THEN ISNULL(TEMP.ULTNUMREFBAIXAOPERAC, TITULOS.ULTNUMREFBAIXAOPERAC) 
										ELSE TITULOS.ULTNUMREFBAIXAOPERAC END,
			 ULTNUMSEQBAIXAOPERAC = CASE WHEN ISNULL(TEMP.ULTNUMSEQBAIXAOPERAC, -1) > ISNULL(TITULOS.ULTNUMSEQBAIXAOPERAC, -1) 
										THEN ISNULL(TEMP.ULTNUMSEQBAIXAOPERAC, TITULOS.ULTNUMSEQBAIXAOPERAC)
										ELSE TITULOS.ULTNUMSEQBAIXAOPERAC END,
			 ULTNUMREFBAIXAEFET = CASE WHEN ISNULL(TEMP.ULTNUMSEQBAIXAEFET, -1) > ISNULL(TITULOS.ULTNUMSEQBAIXAEFET, -1)
										THEN ISNULL(TEMP.ULTNUMREFBAIXAEFET, TITULOS.ULTNUMREFBAIXAEFET)
										ELSE TITULOS.ULTNUMREFBAIXAEFET END,
			 ULTNUMSEQBAIXAEFET = CASE WHEN ISNULL(TEMP.ULTNUMSEQBAIXAEFET, -1) > ISNULL(TITULOS.ULTNUMSEQBAIXAEFET, -1)
										THEN ISNULL(TEMP.ULTNUMSEQBAIXAEFET, TITULOS.ULTNUMSEQBAIXAEFET)
										ELSE TITULOS.ULTNUMSEQBAIXAEFET END
		FROM TITULOS
		INNER JOIN #TEMP_RECEBE TEMP ON (TEMP.CODPROCESSA = '1' AND TITULOS.NUMIDENTCDDA = TEMP.NUMIDENTCDDA)

		SELECT @SQLERRO = @@ERROR
		IF @SQLERRO != 0 GOTO TRATAERROTRANS
		
		INSERT INTO BAIXAS_EFETIVAS
		(
			NUMIDENTCDDA,		NUMIDENTCBAIXAEFET,	NUMCTRLDDA,
			NUMREFCADTIT,		DATAMOVTO,		DATAHORADDA,	
			TIPOBAIXA,		DATAHORABAIXA,		DATABAIXA,		
			DATAHORASITUACAO,	SITPAGTO,		QTDPAGTOREG,
			VLRSALDOATUAL
		)
		SELECT

			TEMP.NUMIDENTCDDA,					TEMP.NUMIDENTCBAIXAEFET,						TEMP.NUMCTRLDDA,						
			TEMP.NUMREFCADTITULO,					TEMP.DATAMOVTO,									TEMP.DATAHORADDA,						
			'4', /*(DECURSO DE PRAZO)*/				TEMP.DATAHORABAIXAEFET,							TEMP.DATAHORABAIXAEFET,
			TEMP.DATAHORASITUACAO,					TEMP.SITPAGTOCIP,								TEMP.QTDPAGTOPARCIAL,
			TEMP.VLRSALDOTITULO

		FROM #TEMP_RECEBE TEMP 
		INNER JOIN TITULOS ON (TEMP.CODPROCESSA = '1' AND TITULOS.NUMIDENTCDDA = TEMP.NUMIDENTCDDA)

		SELECT @SQLERRO = @@ERROR
		IF @SQLERRO != 0 GOTO TRATAERROTRANS
		
          
           END   /* 16/02/2023 - Catalogo anterior à MODERNIZAÇÃO */
         ELSE
           BEGIN /* 16/02/2023 - Modernização em diante */
           
		UPDATE TITULOS SET
			 DTHRSITTITULO 		= TEMP.DATAHORASITUACAO,
			 QTDPAGTOREG 		= ISNULL(TEMP.QTDPAGTOPARCIAL, TITULOS.QTDPAGTOREG),
			 VLRSALDOATUAL 		= ISNULL(TEMP.VLRSALDOTITULO, TITULOS.VLRSALDOATUAL),
			 SITPAGAMENTOCIP 	= TEMP.SITPAGTOCIP,
			 TIPOBAIXA 		= '7',  /*(DECURSO DE PRAZO PÓS MODERNIZAÇÃO)*/		
			 CODSITUACAO 		= '05', /*(BAIXA EFETIVA POR DECURSO DE PRAZO)*/
			 VLRPAGTOBAIXA 		= 0,
			 DATAPAGTOBAIXA 	= TEMP.DATAHORABAIXAEFET,
			 ULTNUMREFCADTIT 	= TEMP.NUMREFCADTITULO 

		FROM TITULOS
		INNER JOIN #TEMP_RECEBE TEMP ON (TEMP.CODPROCESSA = '1' AND TITULOS.NUMIDENTCDDA = TEMP.NUMIDENTCDDA)

		SELECT @SQLERRO = @@ERROR
		IF @SQLERRO != 0 GOTO TRATAERROTRANS

	        INSERT INTO BAIXAS_OPERACIONAIS  
	        (  
	        	NUMIDENTCDDA, NUMIDENTCBAIXAOPERAC, NUMCTRLDDA,   
	        	NUMSEQBAIXAOPERAC, NUMREFCADTIT,  DATAMOVTO,  
	        	DATAHORADDA, TIPOBAIXA, DATABAIXA, DATAHORABAIXA,  
	        	VLRBAIXA, SITBAIXA, DATAHORASITUACAO,  
	        	SITPAGTO, INDCONTINGENCIA, QTDPAGTOREG, 	VLRSALDOATUAL
	        )   
	        SELECT  
	        	#TEMP_RECEBE.NUMIDENTCDDA, ISNULL (#TEMP_RECEBE.ULTNUMIDENTCBAIXAOPERAC, #TEMP_RECEBE.NUMIDENTCDDA),
	        	#TEMP_RECEBE.NUMCTRLDDA,   ISNULL (#TEMP_RECEBE.ULTNUMSEQBAIXAOPERAC, 0), 
	        	#TEMP_RECEBE.NUMREFCADTITULO, #TEMP_RECEBE.DATAMOVTO,  
	        	#TEMP_RECEBE.DATAHORADDA, '7' /* DECURSO */, 
	        	CONVERT (DATE, #TEMP_RECEBE.DATAHORABAIXAEFET) /* ESTE CAMPO TEM QUE SER GUARDAO SEM A HORA */,  
	        	#TEMP_RECEBE.DATAHORABAIXAEFET,  
	        	0,  'A', /* BAIXA ATIVA */ #TEMP_RECEBE.DATAHORASITUACAO, 
	        	#TEMP_RECEBE.SITPAGTOCIP, 
	        	'N', #TEMP_RECEBE.QTDPAGTOPARCIAL,  
	        	#TEMP_RECEBE.VLRSALDOTITULO
	        	
	        FROM #TEMP_RECEBE 
	        WHERE #TEMP_RECEBE.CODPROCESSA = '1'   
	        
	        SELECT @SQLERRO = @@ERROR  
	        IF @SQLERRO <> 0 GOTO TRATAERROTRANS  
           
           END   /* 16/02/2023 - Modernização em diante */
           


	COMMIT TRANSACTION


RETURN

TRATAERROTRANS:
ROLLBACK TRANSACTION
GOTO TRATAERRO

TRATAERRO:
SELECT @P_SQLERRO = @SQLERRO
RETURN



END


GO



INSERT INTO VERSAO_SISTEMA (
	[VERSAO], 
    [NOMESCRIPT], 
    [CODUSUARIO], 
    [DATAATU]
)
SELECT 
	'V15_01_1_01B', 
	'SP_PROCESSA_ADDA120', 
	SYSTEM_USER, 
	GETDATE() 
GO