USE AB_DDA
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE name = 'SP_PROCESSA_DDA0116_ADDA116_RR2')
BEGIN
	EXEC ('CREATE PROCEDURE dbo.SP_PROCESSA_DDA0116_ADDA116_RR2 AS BEGIN RETURN END')
END
GO

ALTER  PROCEDURE SP_PROCESSA_DDA0116_ADDA116_RR2(  
@P_TIMEOUT INT, 
@P_SQLERRO INT OUT  
) AS BEGIN  

	/*  
		MARCACOES DIFERENCIADAS (CODPROCESSA)  

		"5" - AVISO JA RECEBIDO COMO R1  
		"4" - DUPLICIDADE DE AVISO (APENAS O MAIS RECENTE GERA ATUALIZACAO NA BASE)  

		DOMINIOS DE REJEICOES (CODREJEICAO)  

		'01' - TITULO NAO ENCONTRADO  
		'23' - BAIXA OPERACIONAL NAO ENCONTRADA  
		'24' - BAIXA OPERACIONAL JA CONSTA COMO CANCELADA  

	*/  
	/*---------------------------------------------------------------------------------------------------------------------------------------------*/  
	/* 05/02/2023 - Eliane - A partir da Modernização, o cancelamento de baixa pela IF DESTINATÁRIA será feito pela DDA0116.                       */  
	/* 15/02/2023            No caso de uma DDA0108 ter baixado efetivamente o título, o mesmo deverá ser reaberto.                                */  
	/* 08/03/2023 - Eliane - Corrigindo o UPDATE final para pegar apenas CODPROCESSA 4 E 5! Estava pegando tudo, até o 1!                          */                                       
	/*---------------------------------------------------------------------------------------------------------------------------------------------*/  

	DECLARE 
		@DATAULTPROCESSAMENTO DATETIME, 
		@DATAPROCESSAMENTO DATETIME, 
		@SQLERRO INTEGER, 
		@TIMESTAMP DATETIME, 
		@VRSMANUAL VARCHAR (07) /* 15/02/2023 */  

	SELECT 
		@DATAULTPROCESSAMENTO = DATAULTPROCESSAMENTO, 
		@DATAPROCESSAMENTO = DATAPROCESSAMENTO, 
		@TIMESTAMP = GETDATE()  
	FROM PARAMETROS 
	WHERE CODSISTEMA = 'DDA-AUTK'    

	SELECT @VRSMANUAL = VRSMANUAL 
	FROM VWIB_VRSMANUAL WITH (NOLOCK)  /* 15/02/2023 */  

	-- TIMEOUT DAS TABELAS DE RESERVA  
	DELETE 
	FROM TEMP_RECEBE_ADDA116_RR2 
	WHERE DATEADD(MINUTE, @P_TIMEOUT, DATAHORAPROC) < @TIMESTAMP  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	-- TRATAMENTO DE RECEBES ACEITAS  
	-- SELECIONA TUDO PENDENTE  
	SELECT * 
		INTO #TEMP_RR2 
	FROM RECEBE_ADDA116_RR2  
	WHERE DATAMOVTO >= @DATAULTPROCESSAMENTO 
	AND DATAMOVTO <= @DATAPROCESSAMENTO 
	AND CODPROCESSA = '0' 
	AND INDIMPORTACAOVALIDA = 'S'  

	-- DELETA TUDO QUE ESTA RESERVADO  
	DELETE #TEMP_RR2
	FROM #TEMP_RR2   
		INNER JOIN TEMP_RECEBE_ADDA116_RR2 
	ON (TEMP_RECEBE_ADDA116_RR2.SEQ_RECEBE = #TEMP_RR2.SEQ_RECEBE   
	AND TEMP_RECEBE_ADDA116_RR2.NUMIDENTCDDA = #TEMP_RR2.NUMIDENTCDDA 
	AND TEMP_RECEBE_ADDA116_RR2.DATAMOVTO = #TEMP_RR2.DATAMOVTO)  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	-- RESERVA O QUE ESTA LIVRE  
	INSERT INTO TEMP_RECEBE_ADDA116_RR2(
		SEQ_RECEBE, NUMIDENTCDDA, DATAMOVTO, DATAHORAPROC
	)  
	SELECT 
		SEQ_RECEBE, NUMIDENTCDDA, DATAMOVTO, @TIMESTAMP 
	FROM #TEMP_RR2  

	-- PK DUPLICADA, PROCESSOS SIMULTANEOS?  
	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	IF(EXISTS(SELECT 1 FROM #TEMP_RR2))  
	BEGIN  

	-- REJEICOES  

	-- CODREJEICAO '01' - POR TITULO NAO ENCONTRADO  
	/*
	UPDATE #TEMP_RR2 SET 
		CODREJEICAO = '01',
		CODPROCESSA = '2'  
	WHERE CODPROCESSA = '0' 
	AND CODREJEICAO IS NULL   
	AND NOT EXISTS (SELECT 1 
					FROM TITULOS 
					WHERE NUMIDENTCDDA = #TEMP_RR2.NUMIDENTCDDA)  
	*/
	
	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	-- CODREJEICAO '23' - POR BAIXA NAO ENCONTRADA  
	UPDATE #TEMP_RR2 SET 
		CODREJEICAO = '23', 
		CODPROCESSA = '2'  
	WHERE CODPROCESSA = '0' 
	AND CODREJEICAO IS NULL   
	AND NOT EXISTS (SELECT 1
					FROM BAIXAS_OPERACIONAIS 
					WHERE NUMIDENTCDDA = #TEMP_RR2.NUMIDENTCDDA
					AND NUMIDENTCBAIXAOPERAC = #TEMP_RR2.NUMIDENTCBAIXA)  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	-- CODREJEICAO '24' - POR BAIXA QUE JA CONSTA COMO CANCELADA  
	UPDATE #TEMP_RR2 SET 
		CODREJEICAO = '24', 
		CODPROCESSA = '2' 
	FROM #TEMP_RR2   
		INNER JOIN BAIXAS_OPERACIONAIS  
	ON (#TEMP_RR2.CODPROCESSA = '0' 
	AND #TEMP_RR2.CODREJEICAO IS NULL   
	AND #TEMP_RR2.NUMIDENTCDDA = BAIXAS_OPERACIONAIS.NUMIDENTCDDA  
	AND #TEMP_RR2.NUMIDENTCBAIXA = BAIXAS_OPERACIONAIS.NUMIDENTCBAIXAOPERAC  
	AND BAIXAS_OPERACIONAIS.DATAHORACANCEL IS NOT NULL)  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	-- MARCACOES DIFERENCIADAS  
	-- MOVIMENTOS SERAO SEPARADOS DOS DEMAIS PARA SOMENTE RECEBEREM A MARCACAO DE PROCESSADOS AO FINAL DA PROCEDURE  

	-- CODPROCESSA "5": BAIXA JA RECEBIDA EM UMA ADDA/DDA0114R1  
	UPDATE #TEMP_RR2 SET 
		CODPROCESSA = '4' 
	FROM #TEMP_RR2   
		INNER JOIN RECEBE_ADDA116_RET_ACEITOS  
	ON (#TEMP_RR2.CODPROCESSA = '0' 
	AND #TEMP_RR2.CODREJEICAO IS NULL  
	AND RECEBE_ADDA116_RET_ACEITOS.DATAMOVTO >= @DATAULTPROCESSAMENTO 
	AND RECEBE_ADDA116_RET_ACEITOS.DATAMOVTO <= @DATAPROCESSAMENTO  
	AND #TEMP_RR2.NUMCTRLDDA = RECEBE_ADDA116_RET_ACEITOS.NUMCTRLDDA)  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	-- CODPROCESSA "4": DUPLICIDADE DE AVISOS  
	-- SE HOUVER DUPLICIDADE NO AVISO, MESMA BAIXA SENDO CANCELADA, OS RECEBIMENTOS COM DATAHORADDA OU SEQ_RECEBE MENOR SAO SEPARADAS PARA SEREM SOMENTE MARCADAS COMO PROCESSADAS AO FINAL  
	SELECT MAX(DATAHORADDA) MAX_DATAHORADDA, NUMIDENTCBAIXA
		INTO #TEMP_MAX_DATAHORADDA 
	FROM #TEMP_RR2  
	WHERE CODPROCESSA = '0' 
	AND CODREJEICAO IS NULL  
	GROUP BY NUMIDENTCBAIXA

	UPDATE #TEMP_RR2 SET 
		CODPROCESSA = '4' 
	FROM #TEMP_RR2   
	WHERE #TEMP_RR2.CODPROCESSA = '0' 
	AND #TEMP_RR2.CODREJEICAO IS NULL   
	AND #TEMP_RR2.DATAHORADDA < (SELECT MAX_DATAHORADDA 
						FROM #TEMP_MAX_DATAHORADDA  
						WHERE #TEMP_MAX_DATAHORADDA.NUMIDENTCBAIXA = #TEMP_RR2.NUMIDENTCBAIXA)  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	SELECT MAX(SEQ_RECEBE) MAX_SEQ_RECEBE, NUMIDENTCBAIXA 
		INTO #TEMP_MAX_SEQ_RECEBE 
	FROM #TEMP_RR2  
	WHERE CODPROCESSA = '0' 
	AND CODREJEICAO IS NULL   
	GROUP BY NUMIDENTCBAIXA  

	UPDATE #TEMP_RR2 SET 
		CODPROCESSA = '4' 
	FROM #TEMP_RR2   
	WHERE #TEMP_RR2.CODPROCESSA = '0'
	AND #TEMP_RR2.CODREJEICAO IS NULL   
	AND #TEMP_RR2.SEQ_RECEBE < (SELECT MAX_SEQ_RECEBE 
					FROM #TEMP_MAX_SEQ_RECEBE  
					WHERE #TEMP_MAX_SEQ_RECEBE.NUMIDENTCBAIXA = #TEMP_RR2.NUMIDENTCBAIXA)  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	-- O RESTO PODE SER DADO COMO ACEITO E PROCESSADO  
	UPDATE #TEMP_RR2 SET 
		CODPROCESSA = '1' 
	WHERE CODPROCESSA = '0' 
	AND CODREJEICAO IS NULL  

	SELECT @SQLERRO = @@ERROR     
	IF @SQLERRO <> 0 GOTO TRATAERRO  

	BEGIN TRANSACTION  

		-- OS DADOS QUE PODEM SER SEGURAMENTE ATUALIZADOS NO TITULO: DADOS DE PAGAMENTO  
     
		UPDATE TITULOS SET   
			SITPAGAMENTO = '3', -- BAIXA CANCELADA  
			CODSISLEGADO = NULL  
		FROM TITULOS  
			INNER JOIN #TEMP_RR2  
		ON (#TEMP_RR2.CODPROCESSA = '1'  
		AND #TEMP_RR2.NUMIDENTCDDA = TITULOS.NUMIDENTCDDA)  

		SELECT @SQLERRO = @@ERROR     
		IF @SQLERRO <> 0 GOTO TRATAERROTRANS  

		-- ATUALIZADOS OS DADOS QUE DEPENDEM QUE A INFORMACAO QUE ESTA SENDO RECEBIDA NAO ESTA DESATUALIZADA (COMPARANDO A DTHRSITTITULO E OS SEQUENCIAIS ONDE FOR POSSIVEL)  
		UPDATE TITULOS SET   
			QTDPAGTOREG = ISNULL(#TEMP_RR2.QTDPAGTOREGTD, TITULOS.QTDPAGTOREG), 
			VLRSALDOATUAL = ISNULL(#TEMP_RR2.VLRSALDOATUAL, TITULOS.VLRSALDOATUAL), 
			SITPAGAMENTOCIP = #TEMP_RR2.SITPAGTO, 
			ULTNUMREFCADTIT = #TEMP_RR2.NUMREFALTCADTIT, 
			DTHRSITTITULO = #TEMP_RR2.DATAHORASITUACAO, 

			/* Dados atualizados com a MODERNIZAÇÃO na baixa respectiva */  
			INDCONTINGENCIA  = NULL, 
			TIPOPESPORTADOR  = NULL, 
			CNPJ_CPF_PORTADOR  = NULL, 
			DATAHORADDA   = #TEMP_RR2.DATAHORADDA, 
			CODSITUACAO   = '1', /* EM ABERTO */  
			TIPOBAIXA        = NULL, 
			DATAPAGTOBAIXA   = NULL, 
			VLRPAGTOBAIXA    = NULL  

		FROM TITULOS  
			INNER JOIN #TEMP_RR2  
		ON (#TEMP_RR2.CODPROCESSA = '1' 
		AND #TEMP_RR2.NUMIDENTCDDA = TITULOS.NUMIDENTCDDA 
		AND #TEMP_RR2.DATAHORASITUACAO > ISNULL(TITULOS.DTHRSITTITULO, CAST('' AS DATETIME)))  

		SELECT @SQLERRO = @@ERROR     
		IF @SQLERRO <> 0 GOTO TRATAERROTRANS  

		UPDATE BAIXAS_OPERACIONAIS SET  
			NUMCTRLDDACANCEL = #TEMP_RR2.NUMCTRLDDA, 
			DATAHORADDA = #TEMP_RR2.DATAHORADDA, 
			DATAHORACANCEL = #TEMP_RR2.DATAHORACANCELAMENTOBAIXA, 
			ORIGEMCANCELAMENTO = '2', -- OUTRA IF GEROU O CANCELAMENTO  
			SITBAIXA = 'C' /* CANCELADA PELO PARTICIPANTE*/  
		FROM BAIXAS_OPERACIONAIS   
			INNER JOIN #TEMP_RR2  
		ON (#TEMP_RR2.CODPROCESSA = '1' 
		AND #TEMP_RR2.NUMIDENTCBAIXA = BAIXAS_OPERACIONAIS.NUMIDENTCBAIXAOPERAC)  

		SELECT @SQLERRO = @@ERROR     
		IF @SQLERRO <> 0 GOTO TRATAERROTRANS  

		-- RESTABELECENDO OS RECEBIMENTOS COM MARCACOES DIFERENCIADAS PARA O ESTADO DE PROCESSADO  

		 
		---- UPDATE #TEMP_RR2 SET CODPROCESSA = '1' WHERE CODPROCESSA IN ('4', '5')  

		UPDATE #TEMP_RR2 SET 
			CODPROCESSA = '2', 
			CODREJEICAO =  CASE WHEN CODPROCESSA = '4' THEN '36'   
					    WHEN CODPROCESSA = '5' THEN '37'   
				       END  
		WHERE CODPROCESSA IN ('4', '5')  /* 08/03/2023 */  

		
		SELECT @SQLERRO = @@ERROR     
		IF @SQLERRO <> 0 GOTO TRATAERROTRANS  

		-- RECEBES PROCESSADAS  
		UPDATE RECEBE_ADDA116_RR2 SET 
			CODPROCESSA = #TEMP_RR2.CODPROCESSA, 
			CODREJEICAO = #TEMP_RR2.CODREJEICAO, 
			DATAMANUTENCAO = @TIMESTAMP  
		FROM RECEBE_ADDA116_RR2   
			INNER JOIN #TEMP_RR2  
		ON (RECEBE_ADDA116_RR2.SEQ_RECEBE = #TEMP_RR2.SEQ_RECEBE)  

		SELECT @SQLERRO = @@ERROR     
		IF @SQLERRO <> 0 GOTO TRATAERROTRANS  

	COMMIT TRANSACTION  

	END  

	RETURN  
	
	TRATAERROTRANS:  
		ROLLBACK TRANSACTION  
		GOTO TRATAERRO  
	
	TRATAERRO:  
		SELECT @P_SQLERRO = @SQLERRO  
		RETURN  
END  
GO

INSERT INTO VERSAO_SISTEMA (
	[VERSAO], 
    [NOMESCRIPT], 
    [CODUSUARIO], 
    [DATAATU]
)
SELECT 
	'V15_01_1_01B', 
	'SP_PROCESSA_DDA0116_ADDA116_RR2', 
	SYSTEM_USER, 
	GETDATE() 
GO


