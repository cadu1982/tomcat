USE AB_DDA
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE name = 'SP_PROCESSA_DDA0102_ADDA102_RR2')
BEGIN
	EXEC ('CREATE PROCEDURE dbo.SP_PROCESSA_DDA0102_ADDA102_RR2 AS BEGIN RETURN END')
END
GO

ALTER PROCEDURE SP_PROCESSA_DDA0102_ADDA102_RR2 (
			@P_TIMEOUT INT,
			@P_SQLERRO INT OUT
) AS BEGIN
        /*-------------------------------------------------------------------------------------------------------------------------------*/
	/*	16/05/2019 - EDUARDOK/RFAQUINI - LIMPEZA DE BAIXAS  OPERACIONAIS/EFETIVAS NO RECEBIMENTO DE ALTERAÇÃO(102RR2) DE CARTÕES */
	/*      23/06/2022 - Eliane - Retirando a comparação entre R1 e RR2 por falta de efetividade desta query.                        */
	/*                            O NUMCTRLDDA varia entre os tipos de movimento porque é o controle da CIP!                         */
	/*      08/03/2023 - Eliane - Corrigindo o UPDATE final para pegar apenas CODPROCESSA 4 E 5! Estava pegando tudo, até o 1!       */                                     
	/*-------------------------------------------------------------------------------------------------------------------------------*/
	/*
		MARCACOES DIFERENCIADAS (CODPROCESSA)

		"5" - AVISO JA RECEBIDO COMO R1 --> Na verdade, desprezar RR2 cuja IF Cedente é a nossa IF 
		      pois somente quem altera dados do título é a IF CEDENTE !
		"4" - DUPLICIDADE DE AVISO (APENAS O MAIS RECENTE GERA ATUALIZACAO NA BASE)


		DOMINIO DE REJEICOES (CODREJEICAO)	

		'01' - TITULO NAO ENCONTRADO
		'28' - DADOS DE TITULO DESATUALIZADOS
	*/


	DECLARE @DATAULTPROCESSAMENTO DATETIME, 
			@DATAPROCESSAMENTO DATETIME,
			@SQLERRO INTEGER,
			@TIMESTAMP DATETIME,
			@ISPB CHAR(8)



	SELECT @DATAULTPROCESSAMENTO = DATAULTPROCESSAMENTO, @DATAPROCESSAMENTO = DATAPROCESSAMENTO, @TIMESTAMP = GETDATE(), @ISPB = ISPB
   	FROM PARAMETROS WHERE CODSISTEMA = 'DDA-AUTK'  
  	
   	-- TIMEOUT DAS TABELAS DE RESERVA
   	DELETE FROM TEMP_RECEBE_ADDA102_RR2 WHERE DATEADD(MINUTE, @P_TIMEOUT, DATAHORAPROC) < @TIMESTAMP

	SELECT @SQLERRO = @@ERROR		 
	IF @SQLERRO <> 0 GOTO TRATAERRO

	-- TRATAMENTO DE RECEBES ACEITAS
	-- SELECIONA TUDO PENDENTE
	SELECT * INTO #TEMP_RR2 FROM RECEBE_ADDA102_RR2
	WHERE DATAMOVTO >= @DATAULTPROCESSAMENTO AND DATAMOVTO <= @DATAPROCESSAMENTO AND CODPROCESSA = '0' AND INDIMPORTACAOVALIDA = 'S'

	-- DELETA TUDO QUE ESTA RESERVADO
	DELETE TEMP FROM #TEMP_RR2 TEMP
	INNER JOIN TEMP_RECEBE_ADDA102_RR2 RESERVA ON (RESERVA.SEQ_RECEBE = TEMP.SEQ_RECEBE 
		AND RESERVA.NUMIDENTCDDA = TEMP.NUMIDENTCDDA AND RESERVA.DATAMOVTO = TEMP.DATAMOVTO)

	SELECT @SQLERRO = @@ERROR		 
	IF @SQLERRO <> 0 GOTO TRATAERRO

	-- RESERVA O QUE ESTA LIVRE
	INSERT INTO TEMP_RECEBE_ADDA102_RR2(SEQ_RECEBE,NUMIDENTCDDA,DATAMOVTO,DATAHORAPROC)
	SELECT SEQ_RECEBE, NUMIDENTCDDA, DATAMOVTO, @TIMESTAMP FROM #TEMP_RR2

	-- PK DUPLICADA, PROCESSOS SIMULTANEOS?
  	SELECT @SQLERRO = @@ERROR		 
	IF @SQLERRO <> 0 GOTO TRATAERRO

	IF(EXISTS(SELECT 1 FROM #TEMP_RR2))
	BEGIN

		/** REJEICOES **/


		/* CODREJEICAO "01" - TITULO NAO ENCONTRADO */
		UPDATE #TEMP_RR2 SET CODREJEICAO = '01', CODPROCESSA = '2' FROM #TEMP_RR2 TEMP
		WHERE TEMP.CODPROCESSA = '0' AND TEMP.CODREJEICAO IS NULL AND NOT EXISTS (SELECT 1 FROM TITULOS WHERE NUMIDENTCDDA = TEMP.NUMIDENTCDDA)

		/* CODREJEICAO "28" - MOVIMENTO DESATUALIZADO EM RELACAO A SITUACAO ATUAL DO TITULO (NUMSEQ MENOR) */
		UPDATE #TEMP_RR2 SET CODREJEICAO = '28', CODPROCESSA = '2' FROM #TEMP_RR2 TEMP
		INNER JOIN TITULOS ON (
			TEMP.CODPROCESSA = '0' AND TEMP.CODREJEICAO IS NULL 
			AND TEMP.NUMIDENTCDDA = TITULOS.NUMIDENTCDDA
			AND TEMP.NUMSEQCADTIT < TITULOS.ULTNUMSEQCADTIT
		)


		/** MARCACOES DIFERENCIADAS **/
		-- MOVIMENTOS SERAO SEPARADOS DOS DEMAIS PARA SOMENTE RECEBEREM A MARCACAO DE PROCESSADOS AO FINAL DA PROCEDURE

		-- CODPROCESSA "5": ALTERACAO A SER RECEBIDA VIA ADDARET/DDA0102R1
		
		UPDATE #TEMP_RR2 SET CODPROCESSA = '5' FROM #TEMP_RR2 TEMP
		WHERE TEMP.CODPROCESSA = '0' AND TEMP.CODREJEICAO IS NULL 
		AND   TEMP.ISPBIFCEDENTE = @ISPB -- SE A R1 AINDA NAO CHEGOU, DEVERA CHEGAR EM BREVE: 
		                                 -- A IF QUE INCLUIU E PODE GERAR ALTERACOES NO TITULO 
		                                 -- (A IF DESTINATARIA) FOI A PROPRIA INSTITUICAO

		-- CODPROCESSA "4": DUPLICIDADE DE AVISOS
		-- UTILIZANDO APENAS O RECEBIMENTO MAIS RECENTE PARA CADA TITULO EM TERMOS DE DATAHORADDA E SEQ_RECEBE
		UPDATE #TEMP_RR2 SET CODPROCESSA = '4'  FROM #TEMP_RR2 TEMP
		WHERE TEMP.CODPROCESSA = '0' AND TEMP.CODREJEICAO IS NULL 
		AND TEMP.DATAHORADDA < (SELECT MAX(DATAHORADDA) FROM #TEMP_RR2 WHERE CODPROCESSA = '0' AND CODREJEICAO IS NULL AND NUMIDENTCDDA = TEMP.NUMIDENTCDDA)

		SELECT @SQLERRO = @@ERROR		 
		IF @SQLERRO <> 0 GOTO TRATAERRO

		UPDATE #TEMP_RR2 SET CODPROCESSA = '4'  FROM #TEMP_RR2 TEMP
		WHERE TEMP.CODPROCESSA = '0' AND TEMP.CODREJEICAO IS NULL 
		AND SEQ_RECEBE < (SELECT MAX(SEQ_RECEBE) FROM #TEMP_RR2 WHERE CODPROCESSA = '0' AND CODREJEICAO IS NULL AND NUMIDENTCDDA = TEMP.NUMIDENTCDDA)

		SELECT @SQLERRO = @@ERROR		 
		IF @SQLERRO <> 0 GOTO TRATAERRO
	
		-- RESTANTE PODE SER DADO COMO ACEITO E PROCESSADO
		

		UPDATE #TEMP_RR2 SET CODPROCESSA = '1', DATAMANUTENCAO = @TIMESTAMP WHERE CODPROCESSA = '0' AND CODREJEICAO IS NULL


		BEGIN TRANSACTION

			-- ALTERACOES SEM CONTROLE POR INDICADOR DE MANUTENCAO

			UPDATE TITULO SET
					TITULO.ULTNUMREFCADTIT = ISNULL(ALTERACAO.NUMREFCADTIT, TITULO.ULTNUMREFCADTIT),
					TITULO.ULTNUMSEQCADTIT = ISNULL(ALTERACAO.NUMSEQCADTIT, TITULO.ULTNUMSEQCADTIT),
					TITULO.ISPBCEDENTE = ALTERACAO.ISPBIFCEDENTE,
					TITULO.QTDPAGTOREG = ALTERACAO.QTDPGTOPARCLREGTD,
					TITULO.VLRSALDOATUAL = ALTERACAO.VLRSALDOATUAL,
					TITULO.DTHRSITTITULO = ALTERACAO.DATAHORASITUACAO,
					TITULO.SITPAGAMENTOCIP = ALTERACAO.SITPAGTO
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA)

			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

				-- SEQUENCIAIS DE BAIXA OPERACIONAL
			UPDATE TITULO
			   SET TITULO.ULTNUMREFBAIXAOPERAC = ISNULL(ALTERACAO.NUMULTREFBAIXAOPERAC, TITULO.ULTNUMREFBAIXAOPERAC),
				   TITULO.ULTNUMSEQBAIXAOPERAC = ISNULL(ALTERACAO.NUMULTSEQBAIXAOPERAC, TITULO.ULTNUMSEQBAIXAOPERAC)
			  FROM #TEMP_RR2 ALTERACAO
			 INNER JOIN TITULOS TITULO
			    ON (ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
				AND ISNULL(ALTERACAO.NUMULTSEQBAIXAOPERAC, -1) > ISNULL(TITULO.ULTNUMSEQBAIXAOPERAC, -1)
				)

			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

				-- SEQUENCIAIS DE BAIXA EFETIVA
			UPDATE TITULO
			   SET TITULO.ULTNUMREFBAIXAEFET = ISNULL(ALTERACAO.NUMULTREFBAIXAEFETIVA, TITULO.ULTNUMREFBAIXAEFET),
				   TITULO.ULTNUMSEQBAIXAEFET = ISNULL(ALTERACAO.NUMULTSEQBAIXAEFETIVA, TITULO.ULTNUMSEQBAIXAEFET)
			  FROM #TEMP_RR2 ALTERACAO
			 INNER JOIN TITULOS TITULO
			    ON (ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
				AND ISNULL(ALTERACAO.NUMULTSEQBAIXAEFETIVA, -1) > ISNULL(TITULO.ULTNUMSEQBAIXAEFET, -1)
				)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			--LIMPEZA DE BAIXAS  OPERACIONAIS/EFETIVAS NO RECEBIMENTO DE ALTERAÇÃO(102RR2) DE CARTÕES --EDUARDOK/RFAQUINI -16/05/2019
			--INICIO
			SELECT R2.NUMIDENTCDDA, R2.SITPAGTO, R2.CODPROCESSA, R2.QTDPGTOPARCLREGTD, R2.VLRSALDOATUAL
			  INTO #TEMP_RR2_CARTAO
			  FROM #TEMP_RR2 R2 INNER JOIN TITULOS T
			    ON (T.NUMIDENTCDDA = R2.NUMIDENTCDDA)
			 WHERE CODPROCESSA = '1'
			   AND CODREJEICAO IS NULL
			   AND INDPARCIAL = 'S'
			   AND (  R2.DATALIMPAGTO <> T.DATALIMPAGTO
			       OR R2.DATAVENCIMENTO <> T.DATAVENCIMENTO
				   OR R2.VLRTITULO <> T.VLRTITULO)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			--limpa os dados do titulo relacionados a baixa efetiva. Atualiza as informações alterados pela baixa por infos da CIP
			UPDATE TITULOS
			   SET SITPAGAMENTOCIP = R2.SITPAGTO,
			       QTDPAGTOREG = R2.QTDPGTOPARCLREGTD,
				   VLRSALDOATUAL = R2.VLRSALDOATUAL,
				   TIPOBAIXA = NULL,
			       DATAPAGTOBAIXA = NULL,
			       VLRPAGTOBAIXA = NULL
			  FROM #TEMP_RR2_CARTAO R2
			 WHERE TITULOS.NUMIDENTCDDA = R2.NUMIDENTCDDA
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			--limpa as baixas operacionais dos titulos de cartão atualizados pela 102R2
			DELETE BO
			  FROM BAIXAS_OPERACIONAIS BO
			 INNER JOIN #TEMP_RR2_CARTAO C
			    ON (BO.NUMIDENTCDDA = C.NUMIDENTCDDA)

			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			--limpa as baixas efetivas dos titulos de cartão atualizados pela 102R2
			DELETE BE
			  FROM BAIXAS_EFETIVAS BE
			 INNER JOIN #TEMP_RR2_CARTAO C
			    ON (BE.NUMIDENTCDDA = C.NUMIDENTCDDA)

			--FIM

			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			-- CALCULOS TAMBEM NAO POSSUEM INDICADOR. SAO REMOVIDOS E INCLUIDOS OS QUE VIERAM PREENCHIDOS
			
			DELETE C FROM CALCULOS C 
				INNER JOIN #TEMP_RR2 SELECAO ON (SELECAO.CODPROCESSA = '1' AND C.NUMIDENTCDDA = SELECAO.NUMIDENTCDDA)
				INNER JOIN RECEBE_CALCULOS_ADDA102_RR2 CALCULOS_RR2 ON (SELECAO.SEQ_RECEBE = CALCULOS_RR2.SEQ_RECEBE)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			INSERT INTO CALCULOS (NUMIDENTCDDA, DATACALCULO, VLRMORA, VLRMULTA, VLRDESCONTO, VLRCOBRAR )
				SELECT CALCULOS_RR2.NUMIDENTCDDA, CALCULOS_RR2.DATAVALCALC, CALCULOS_RR2.VLRJUROS, CALCULOS_RR2.VLRMULTA, CALCULOS_RR2.VLRDESC, CALCULOS_RR2.VLRCOBRAR
				FROM RECEBE_CALCULOS_ADDA102_RR2 CALCULOS_RR2
					INNER JOIN #TEMP_RR2 SELECAO ON (SELECAO.CODPROCESSA = '1' AND CALCULOS_RR2.SEQ_RECEBE = SELECAO.SEQ_RECEBE)
	
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			--FIM DAS ALTERACOES SEM CONTROLE NO ADDA102RR2

			--ALTERACOES POR CONTROLE DE INDICADOR DE MANUTENCAO DE CADA GRUPO DO ADDA102RR2

			--CONTROLE INDRMANUTBENFCRIOOR = A
			UPDATE TITULO SET
					TITULO.NOMEFANTASIACEDENTEORI = ALTERACAO.NOMEFANTASIACEDENTEORI,
					TITULO.ENDCEDENTEORI = ALTERACAO.ENDCEDENTEORI,
					TITULO.CIDCEDENTEORI = ALTERACAO.CIDCEDENTEORI,
					TITULO.UFCEDENTEORI = ALTERACAO.UFCEDENTEORI,
					TITULO.CEPCEDENTEORI = ALTERACAO.CEPCEDENTEORI
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTBENFCRIOOR = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTBENFCRIOFINL = A
			UPDATE TITULO SET
					TITULO.TIPOPESCEDENTE = ALTERACAO.TIPOPESCEDENTE,
					TITULO.CNPJ_CPF_CEDENTE = ALTERACAO.CNPJ_CPF_CEDENTE,
					TITULO.NOMECEDENTE = ALTERACAO.NOMECEDENTE,
					TITULO.NOMEFANTASIACEDENTE = ALTERACAO.NOMEFANTASIACEDENTE
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON ( 
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTBENFCRIOFINL = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			--CONTROLE INDRMANUTBENFCRIOFINL = E
			UPDATE TITULO SET
					TITULO.TIPOPESCEDENTE = NULL,
					TITULO.CNPJ_CPF_CEDENTE = NULL,
					TITULO.NOMECEDENTE = NULL,
					TITULO.NOMEFANTASIACEDENTE = NULL
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
						AND ALTERACAO.INDRMANUTBENFCRIOFINL = 'E'
					)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTPAGDRTIT = A
			UPDATE TITULO SET
					TITULO.NOMESACADO = ALTERACAO.NOMESACADO,
					TITULO.NOMEFANTASIASACADO = ALTERACAO.NOMEFANTASIASACADO,
					TITULO.ENDSACADO = ALTERACAO.ENDSACADO,
					TITULO.CIDSACADO = ALTERACAO.CIDSACADO,
					TITULO.UFSACADO = ALTERACAO.UFSACADO,
					TITULO.CEPSACADO = ALTERACAO.CEPSACADO
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTPAGDRTIT = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTSACDRAVALST = A
			UPDATE TITULO SET
					TITULO.TIPOPESSACADOR = ALTERACAO.TIPOPESSACADOR,
					TITULO.CNPJ_CPF_SACADOR = ALTERACAO.CNPJ_CPF_SACADOR,
					TITULO.NOMESACADOR = ALTERACAO.NOMESACADOR
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTSACDRAVALST = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTDOCTIT = A
			UPDATE TITULO SET
					TITULO.CODCARTEIRA = ALTERACAO.CODCARTEIRA,
					TITULO.CODESPECIEDOC = ALTERACAO.CODESPECIEDOC,
					TITULO.SEUNUMERO = ALTERACAO.SEUNUMERO,
					TITULO.TIPOPAGTO = ALTERACAO.TIPOPAGTO,
					TITULO.NUMPARCELA = ALTERACAO.NUMPARCELA,
					TITULO.QTDPARCELA = ALTERACAO.QTDPARCELA,
					TITULO.INDTITULONEGOCIADO = ALTERACAO.INDTITULONEGOCIADO
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTDOCTIT = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)

			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTINSTCPGTOTIT = A
			UPDATE TITULO SET
					TITULO.DATAVENCIMENTO = ALTERACAO.DATAVENCIMENTO,
					TITULO.VLRTITULO = ALTERACAO.VLRTITULO,
					TITULO.QTDEDIASPROTESTO = ALTERACAO.QTDEDIASPROTESTO,
					TITULO.DATALIMPAGTO = ALTERACAO.DATALIMPAGTO,
					TITULO.INDBLOQUEIO = ALTERACAO.INDBLOQUEIO,
					TITULO.VLRABATIMENTO = ALTERACAO.VLRABATIMENTO,
					TITULO.QTDPAGTO = ALTERACAO.QTDPAGTO,
					TITULO.TIPOCALCULO = ALTERACAO.TIPOMODELOCALCULO
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTINSTCPGTOTIT = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					) 
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTINSTCVLRRECBT = A
			UPDATE TITULO SET
					TITULO.TIPOAUTRECDIVERGENTE = ALTERACAO.TIPOAUTRECDIVERGENTE,
					TITULO.INDVALORPERC_MIN = ALTERACAO.INDVALORPERC_MIN,
					TITULO.VLRMINTITULO = ALTERACAO.VLRMINTITULO,
					TITULO.INDVALORPERC_MAX = ALTERACAO.INDVALORPERC_MAX,
					TITULO.VLRMAXTITULO = ALTERACAO.VLRMAXTITULO
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
						AND ALTERACAO.INDRMANUTINSTCVLRRECBT = 'A'
					)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTJUROSTIT = A
			UPDATE TITULO SET
					TITULO.CODMORA = ALTERACAO.CODMORA,
					TITULO.DATAMORA = ALTERACAO.DATAMORA,
					TITULO.VLRPERCMORA = ALTERACAO.VLRPERCMORA
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTJUROSTIT = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)
					
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTMULTATIT = A
			UPDATE TITULO SET
					TITULO.CODMULTA = ALTERACAO.CODMULTA,
					TITULO.DATAMULTA = ALTERACAO.DATAMULTA,
					TITULO.VLRPERCMULTA = ALTERACAO.VLRPERCMULTA
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTMULTATIT = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)
				
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTDESCTTIT = A
			UPDATE TITULO SET
					TITULO.CODDESCONTO01 = ALTERACAO.CODDESCONTO01,
					TITULO.DATADESCONTO01 = ALTERACAO.DATADESCONTO01,
					TITULO.VLRPERCDESCONTO01 = ALTERACAO.VLRPERCDESCONTO01,
					TITULO.CODDESCONTO02 = ALTERACAO.CODDESCONTO02,
					TITULO.DATADESCONTO02 = ALTERACAO.DATADESCONTO02,
					TITULO.VLRPERCDESCONTO02 = ALTERACAO.VLRPERCDESCONTO02,
					TITULO.CODDESCONTO03 = ALTERACAO.CODDESCONTO03,
					TITULO.DATADESCONTO03 = ALTERACAO.DATADESCONTO03,
					TITULO.VLRPERCDESCONTO03 = ALTERACAO.VLRPERCDESCONTO03
				FROM #TEMP_RR2 ALTERACAO
					INNER JOIN TITULOS TITULO ON (
						ALTERACAO.CODPROCESSA = '1' AND ALTERACAO.INDRMANUTDESCTTIT = 'A'
						AND ALTERACAO.NUMIDENTCDDA = TITULO.NUMIDENTCDDA
					)
			
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS
	
			--CONTROLE INDRMANUTHISTTXTINF = A / E
			DELETE MENSAGENS
				FROM MENSAGENS MENSAGENS 
					INNER JOIN #TEMP_RR2 SELECAO ON (
						SELECAO.CODPROCESSA = '1' AND SELECAO.INDRMANUTHISTTXTINF IN ('A', 'E') 
						AND MENSAGENS.NUMIDENTCDDA = SELECAO.NUMIDENTCDDA
					) 
			
			SELECT @SQLERRO = @@ERROR
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			INSERT INTO MENSAGENS(NUMIDENTCDDA, SEQMENSAGEM, TEXTO)
				SELECT MENSAGENS_RR2.NUMIDENTCDDA, MENSAGENS_RR2.SEQMENSAGEM, MENSAGENS_RR2.TEXTO
					FROM RECEBE_MENSAGENS_ADDA102_RR2 MENSAGENS_RR2
						INNER JOIN #TEMP_RR2 SELECAO ON (
							SELECAO.CODPROCESSA = '1' AND SELECAO.INDRMANUTHISTTXTINF = 'A'
							AND MENSAGENS_RR2.SEQ_RECEBE = SELECAO.SEQ_RECEBE
						)
	
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS		

			--CONTROLE INDRMANUTHISTNOTAFIS = A / E
			DELETE NOTAS_FISCAIS
				FROM NOTAS_FISCAIS NOTAS_FISCAIS
					INNER JOIN #TEMP_RR2 SELECAO ON (
						SELECAO.CODPROCESSA = '1' AND SELECAO.INDRMANUTHISTNOTAFIS IN ('A', 'E')
						AND NOTAS_FISCAIS.NUMIDENTCDDA = SELECAO.NUMIDENTCDDA
					)
				
			
			SELECT @SQLERRO = @@ERROR
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS


			INSERT INTO NOTAS_FISCAIS(NUMIDENTCDDA, DATAEMISSAO, NUMNOTAFISCAL, VLRNOTAFISCAL)
				SELECT NOTAS_FISCAIS_RR2.NUMIDENTCDDA, NOTAS_FISCAIS_RR2.DATAEMISSAO, NOTAS_FISCAIS_RR2.NUMNOTAFISCAL, NOTAS_FISCAIS_RR2.VLRNOTAFISCAL
					FROM RECEBE_NOTAS_FISCAIS_ADDA102_RR2 NOTAS_FISCAIS_RR2
						INNER JOIN #TEMP_RR2 SELECAO ON (
							SELECAO.CODPROCESSA = '1' AND SELECAO.INDRMANUTHISTNOTAFIS = 'A'
							AND SELECAO.SEQ_RECEBE = NOTAS_FISCAIS_RR2.SEQ_RECEBE
							AND NOTAS_FISCAIS_RR2.NUMIDENTCDDA = SELECAO.NUMIDENTCDDA
						)
					
	
			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS	
				
			--FIM DAS ALTERACOES POR CONTROLE DE CADA GRUPO DO ADDA102RR2

			/* POSSIVEIS AVISOS DUPLICADOS PARA UM MESMO TITULO, COM DATA-HORA DDA MAIS ANTIGO OU SEQ_RECEBE MENOR, 
			   FORAM MARCADOS COM CODPROCESSA '4' ANTES DA EFETIVACAO DOS RECEBIMENTOS PARA EVITAR ERROS DE PK */
			/*----------------------------------------------------------------------------------------------------*/
			/* 24/06/2022 - Eliame - Agora deixaremos CODREJEICAO suficiente para interpretacão na RECEBE da RR2. */
			/*                       pois antes a RECEBE ficava com CODPROCESSA = 1 e CODREJEICAO NULL, dando a   */
			/*                       impressão que o registro foi processado, mas na verdade foi descartado.      */
			/*----------------------------------------------------------------------------------------------------*/
			
			UPDATE #TEMP_RR2 SET CODPROCESSA = '2',CODREJEICAO =  CASE WHEN CODPROCESSA = '4' THEN '36' 
			                                                           WHEN CODPROCESSA = '5' THEN '37' 
			                                                      END
			WHERE CODPROCESSA IN ('4', '5')  /* 08/03/2023 */

			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

			/*----------------------------------------------------------------------------------------------------*/
			/* 24/06/2022 - Eliame - Agora deixaremos CODREJEICAO suficiente para interpretacão na RECEBE da RR2. */
			/*                       pois antes a RECEBE ficava com CODPROCESSA = 1 e CODREJEICAO NULL, dando a   */
			/*                       impressão que o registro foi processado, mas na verdade foi descartado.      */
			/*----------------------------------------------------------------------------------------------------*/

			-- RECEBES PROCESSADAS
			UPDATE RECEBE SET CODPROCESSA = TEMP.CODPROCESSA, CODREJEICAO = TEMP.CODREJEICAO, DATAMANUTENCAO = @TIMESTAMP
			FROM RECEBE_ADDA102_RR2 RECEBE
				INNER JOIN #TEMP_RR2 TEMP ON (RECEBE.SEQ_RECEBE = TEMP.SEQ_RECEBE AND RECEBE.NUMIDENTCDDA = TEMP.NUMIDENTCDDA AND RECEBE.DATAMOVTO = TEMP.DATAMOVTO)

			SELECT @SQLERRO = @@ERROR		 
			IF @SQLERRO <> 0 GOTO TRATAERRO_TRANS

		COMMIT TRANSACTION
	
	END
RETURN
TRATAERRO_TRANS:
	ROLLBACK TRANSACTION
	GOTO TRATAERRO
TRATAERRO:
	SELECT @P_SQLERRO = @@ERROR
	RETURN
END
GO

INSERT INTO VERSAO_SISTEMA (
	[VERSAO], 
    [NOMESCRIPT], 
    [CODUSUARIO], 
    [DATAATU]
)
SELECT 
	'V15_01_1_01B', 
	'SP_PROCESSA_DDA0102_ADDA102_RR2',
	SYSTEM_USER, 
	GETDATE() 
GO